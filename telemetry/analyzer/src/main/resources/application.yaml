
spring:
  main:
    web-application-type: none
  kafka:
    client-id: analyzer-service
  datasource:
    url: jdbc:postgresql://localhost:5432/analyzer
    username: name
    password: password
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      mode: always

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.http: TRACE
    org.slf4j: DEBUG
    ru.practicum: DEBUG



analyzer:
  kafka:
    consumers:
      hub:
        bootstrap.servers: localhost:9092
        group.id: hub-analyzer
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: analyzer.config.kafka.HubEventDeserializer
      snapshot:
        bootstrap.servers: localhost:9092
        group.id: snapshot-analyzer
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: analyzer.config.kafka.SensorSnapshotDeserializer
    producer:
      bootstrap.servers: localhost:9092
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      value.serializer: analyzer.config.kafka.AvroSerializer
    topic:
      snapshots: telemetry.snapshots.v1
      hubs: telemetry.hubs.v1

grpc:
  client:
    hub-router:
      address: 'static://localhost:59090'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

